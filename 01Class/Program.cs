using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

// C#은 굉장히 고지식한 객체 지향 언어 -> C#은 다른 프로그램과 달리 자료형 등을 먼저 배우지 않는다.
// C#이라는 언어는 클래스를 설명하지 않고는 사실 무엇을 설명한다는 것이 의미가 없다.

// 게임이란느 것은 굉장히 다양한 개념들을 가지고 있다.

// 직업
// 레벨
// 스킬
// 체력
// 마나
// 퀘스트
// 몬스터
// 무기

// 객체 지향은 저 중에서 적절히 묶어서 클래스화라는 것을 시킨다.
// 그걸 표현하는 것이 클래스

// 객체 지향 프로그래밍의 가장 핵심적인 내용을 설명하고 있는 것
// class(클래스를 선언하기 위한 키워드) 이름
// { < 클래스의 내용의 시작 
// }

// 객체 지향 -> 내가 표현하고 싶은 걸 만들어서 그 클래스로 객체를 만드는 프로그래밍이다.
// 객체를 기반으로 모든걸 해결하기 때문에 객체를 지향(향한다)할 수 밖에 없는 프로그래밍

// 숙련된 프로그래머들은 구현과 개념이 분리되지 않는다.

class Inven
{ 

}

// 내가 생각한 개념이 내 프로그램에서 사용되어지기 위한 설계도를 의미함
// 코딩에서는 설계도가 먼저이고, 그 역할을 해주는 것은 클래스
// 무조건 클래스 먼저 그 다음이 객체
class Player
{

}
class Pet
{
    // 내부의 내용은 중요하지 않다.
}
class Monster
{
    // 내부의 내용은 중요하지 않다.
}